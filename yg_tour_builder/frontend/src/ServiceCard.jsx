// üß© ServiceCard.jsx ‚Äî –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π layout —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å–ª—É–≥–∏
import { useState } from "react";
import CompositeEditor from "./CompositeEditor";

export default function ServiceCard({ data, onChange, onDelete }) {
  const [open, setOpen] = useState(false);

  const handleField = (field, value) => {
    onChange({ ...data, [field]: field.includes("price") ? Number(value) : value });
  };

  const handleComponentUpdate = (components) => {
    onChange({ ...data, components });
  };

  return (
    <div className="space-y-4">
      {/* üìõ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è */}
      <div>
        <label className="block text-sm font-medium mb-1">–ù–∞–∑–≤–∞–Ω–∏–µ</label>
        <input className="w-full border p-2 rounded" value={data.label} placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ" onChange={(e) => handleField("label", e.target.value)} />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">–ö–ª—é—á</label>
        <input className="w-full border p-2 rounded" value={data.key} placeholder="–ö–ª—é—á" onChange={(e) => handleField("key", e.target.value)} />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">–¶–µ–Ω–∞ ‚ÇΩ</label>
        <input type="number" className="w-full border p-2 rounded" value={data.price || 0} placeholder="–¶–µ–Ω–∞" onChange={(e) => handleField("price", e.target.value)} />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">–†–∞—Å—á—ë—Ç</label>
        <select className="w-full border p-2 rounded" value={data.calc || ""} onChange={(e) => handleField("calc", e.target.value)}>
          <option value="fixed">—Ñ–∏–∫—Å</option>
          <option value="per_person">–Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞</option>
          <option value="per_10_people">–Ω–∞ 10 —á–µ–ª–æ–≤–µ–∫</option>
          <option value="people_div_2">–Ω–∞ 2 —á–µ–ª–æ–≤–µ–∫</option>
          <option value="people_div_3">–Ω–∞ 3 —á–µ–ª–æ–≤–µ–∫</option>
        </select>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
        <input className="w-full border p-2 rounded" value={data.category || ""} placeholder="–ö–∞—Ç–µ–≥–æ—Ä–∏—è" onChange={(e) => handleField("category", e.target.value)} />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">–°–µ–∑–æ–Ω</label>
        <input className="w-full border p-2 rounded" value={data.season || ""} placeholder="–°–µ–∑–æ–Ω" onChange={(e) => handleField("season", e.target.value)} />
      </div>

      {/* üìù –û–ø–∏—Å–∞–Ω–∏–µ */}
      <div>
        <label className="block text-sm font-medium mb-1">–û–ø–∏—Å–∞–Ω–∏–µ</label>
        <textarea className="w-full border p-2 rounded" rows={2} value={data.description || ""} placeholder="–û–ø–∏—Å–∞–Ω–∏–µ" onChange={(e) => handleField("description", e.target.value)} />
      </div>

      {/* ‚öôÔ∏è –ö–æ–º–ø–æ–∑–∏—Ç */}
      <div className="space-y-2">
        <label className="flex items-center gap-2">
          <input type="checkbox" checked={data.composite || false} onChange={(e) => handleField("composite", e.target.checked)} />
          <span className="text-sm">–°–æ—Å—Ç–∞–≤–Ω–∞—è —É—Å–ª—É–≥–∞</span>
        </label>
        <input className="w-full border p-2 rounded" value={data.comment || ""} placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" onChange={(e) => handleField("comment", e.target.value)} />
        {data.composite && (
          <button
            onClick={() => setOpen(!open)}
            className="text-sm text-blue-600 hover:underline"
          >
            {open ? "‚ñ≤ –°–∫—Ä—ã—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã" : "‚ñº –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã"}
          </button>
        )}
        {data.composite && open && Array.isArray(data.components) && (
          <CompositeEditor components={data.components} onChange={handleComponentUpdate} />
        )}
      </div>

      {/* ‚ùå –£–¥–∞–ª–µ–Ω–∏–µ */}
      <div className="text-right">
        <button onClick={onDelete} className="text-red-600 hover:text-red-800 text-sm">
          ‚úñ –£–¥–∞–ª–∏—Ç—å —É—Å–ª—É–≥—É
        </button>
      </div>
    </div>
  );
}