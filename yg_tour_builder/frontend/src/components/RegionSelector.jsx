import { useEffect, useState, useMemo } from "react";
import DropdownMenu from "./DropdownMenu";

export default function RegionSelector({ value, onChange }) {
  const [directions, setDirections] = useState({});
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞
  useEffect(() => {
    fetch(`${import.meta.env.VITE_API_URL}/directions`)
      .then(res => res.json())
      .then(data => {
        setDirections(data);
        setLoading(false);
      })
      .catch(err => {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π:", err);
        setError(err);
        setLoading(false);
      });
  }, []);

  // üî∏ –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç, –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è –º–µ–Ω—é
  const items = useMemo(() => {
    return Object.entries(directions).map(([key, val]) => ({
      value: key,
      label: val.label || key,
    }));
  }, [directions]);

  if (loading) return <div>–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π...</div>;
  if (error) return <div>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π</div>;

  // üß≠ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–Ω–æ–ø–∫–∏
  const title = value && directions[value]
    ? directions[value].label
    : "–í—ã–±–µ—Ä–∏ —Ä–µ–≥–∏–æ–Ω";

  return (
    <DropdownMenu
      title={title}
      items={items}
      onSelect={onChange}
    />
  );
}
